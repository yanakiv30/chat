// import { useCallback, useEffect } from "react";
// import { BrowserRouter as Router } from "react-router-dom";
// import "./App.css";
// import { ToastContainer, toast } from "react-toastify";
// import "react-toastify/dist/ReactToastify.css";
// import { useDispatch } from "react-redux";
// import { setUsers } from "../store/userSlice";
// import {
//   setIsDeleteTeam,
//   setTeamWithNewMessage,
//   setTeams,
// } from "../store/groupSlice";
// import { useAppSelector } from "../store/store";
// import ChatMembersList from "./pages/ChatMembersList";
// //import LoginOrSignUp from "./pages/LoginOrSignUp";
// import AllRoutes from "./AllRoutes";
// import { getTeams, getUsers } from "./services/apiGroups";
// import Spinner from "./Components/Spinner";
// import supabase from "./services/supabase";
// import Login from "./pages/Login";
// import SignUp from "./pages/SignUp";

// function App() {
//   const dispatch = useDispatch();
//   const { loggedInUser } = useAppSelector((store) => store.user);
//   const { localTeams } = useAppSelector((store) => store.group);
//   let { isLoading ,isRegister} = useAppSelector((store) => store.user);
//   const loadStateFromBackend = useCallback(() => {
//     if (!loggedInUser) return;

//     getUsers()
//       .then((data) => dispatch(setUsers(data)))
//       .catch((error) => console.error("Error fetching users:", error));

//     getTeams(+loggedInUser.id)
//       .then((data) => dispatch(setTeams(data)))
//       .catch((error) => console.error("Error fetching teams", error));
//   }, [dispatch, loggedInUser]);

//   useEffect(loadStateFromBackend, [loadStateFromBackend]);  

//   return (
//     <Router>
//       <div className="app-container" style={{ position: "relative" }}>
//         {isLoading && <Spinner />}
//         {loggedInUser ? 
//           <div className="main-container">
//             <ChatMembersList />
//             <AllRoutes />            
//           </div>
//          : <div className="background-login"> { !isRegister?<Login/>:<SignUp/> }</div> 
//         }
//       </div>
//     </Router>
//   );
// }
// export default App;